{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schema.ts"],"sourcesContent":["\nimport { pgTable, serial, text, varchar, integer, timestamp, boolean } from 'drizzle-orm/pg-core';\n\nexport const bookings = pgTable('bookings', {\n  id: serial('id').primaryKey(),\n  orderId: varchar('order_id', { length: 255 }).unique().notNull(),\n  ownerFullName: varchar('owner_full_name', { length: 255 }),\n  ownerMobile: varchar('owner_mobile', { length: 20 }),\n  ownerEmail: varchar('owner_email', { length: 255 }),\n  ownerAadhaar: varchar('owner_aadhaar', { length: 20 }),\n  ownerAddress: text('owner_address'),\n  ownerState: varchar('owner_state', { length: 100 }),\n  ownerPincode: varchar('owner_pincode', { length: 10 }),\n  vehicleRegistrationNumber: varchar('vehicle_registration_number', { length: 50 }),\n  engineNumber: varchar('engine_number', { length: 100 }),\n  chassisNumber: varchar('chassis_number', { length: 100 }),\n  vehicleMake: varchar('vehicle_make', { length: 100 }),\n  vehicleModel: varchar('vehicle_model', { length: 100 }),\n  manufacturingYear: varchar('manufacturing_year', { length: 4 }),\n  vehicleCategory: varchar('vehicle_category', { length: 100 }),\n  amount: integer('amount'),\n  status: varchar('status', { length: 50 }).default('pending'),\n  paymentProof: text('payment_proof'),\n  verificationReason: text('verification_reason'),\n  createdAt: timestamp('created_at').defaultNow(),\n  updatedAt: timestamp('updated_at').defaultNow(),\n});\n    \nexport const contacts = pgTable('contacts', {\n    id: serial('id').primaryKey(),\n    firstName: varchar('first_name', { length: 255 }),\n    lastName: varchar('last_name', { length: 255 }),\n    email: varchar('email', { length: 255 }),\n    message: text('message'),\n    createdAt: timestamp('created_at').defaultNow(),\n});\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEO,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,YAAY;IAC1C,IAAI,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,SAAS,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,YAAY;QAAE,QAAQ;IAAI,GAAG,MAAM,GAAG,OAAO;IAC9D,eAAe,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,mBAAmB;QAAE,QAAQ;IAAI;IACxD,aAAa,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,gBAAgB;QAAE,QAAQ;IAAG;IAClD,YAAY,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,eAAe;QAAE,QAAQ;IAAI;IACjD,cAAc,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB;QAAE,QAAQ;IAAG;IACpD,cAAc,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACnB,YAAY,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,eAAe;QAAE,QAAQ;IAAI;IACjD,cAAc,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB;QAAE,QAAQ;IAAG;IACpD,2BAA2B,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,+BAA+B;QAAE,QAAQ;IAAG;IAC/E,cAAc,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB;QAAE,QAAQ;IAAI;IACrD,eAAe,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,kBAAkB;QAAE,QAAQ;IAAI;IACvD,aAAa,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,gBAAgB;QAAE,QAAQ;IAAI;IACnD,cAAc,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB;QAAE,QAAQ;IAAI;IACrD,mBAAmB,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,sBAAsB;QAAE,QAAQ;IAAE;IAC7D,iBAAiB,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,oBAAoB;QAAE,QAAQ;IAAI;IAC3D,QAAQ,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE;IAChB,QAAQ,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,UAAU;QAAE,QAAQ;IAAG,GAAG,OAAO,CAAC;IAClD,cAAc,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACnB,oBAAoB,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACzB,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU;IAC7C,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU;AAC/C;AAEO,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,YAAY;IACxC,IAAI,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,WAAW,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,cAAc;QAAE,QAAQ;IAAI;IAC/C,UAAU,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,aAAa;QAAE,QAAQ;IAAI;IAC7C,OAAO,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,SAAS;QAAE,QAAQ;IAAI;IACtC,SAAS,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE;IACd,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc,UAAU;AACjD","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/db.ts"],"sourcesContent":["\nimport { drizzle } from 'drizzle-orm/neon-http';\nimport { neon } from '@neondatabase/serverless';\nimport * as schema from './schema';\n\nconst sql = neon(process.env.DATABASE_URL!);\nexport const db = drizzle(sql, { schema });\n    \n    \n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEA,MAAM,MAAM,CAAA,GAAA,sJAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY;AAClC,MAAM,KAAK,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAD,EAAE,KAAK;IAAE,QAAA;AAAO","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/contact/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { db } from \"@/lib/db\";\nimport { contacts } from \"@/lib/schema\";\nimport { z } from \"zod\";\n\nconst ContactFormSchema = z.object({\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n  email: z.string().email(\"Invalid email address\"),\n  message: z.string().min(5, \"Message must be at least 5 characters\"),\n});\n\nexport type ContactFormState = {\n  message: string;\n  success: boolean;\n};\n\nexport async function sendContactMessage(\n  prevState: ContactFormState,\n  formData: FormData\n): Promise<ContactFormState> {\n  const validatedFields = ContactFormSchema.safeParse({\n    firstName: formData.get(\"firstName\"),\n    lastName: formData.get(\"lastName\"),\n    email: formData.get(\"email\"),\n    message: formData.get(\"message\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      success: false,\n      message: \"Validation Error: Please check your input.\",\n    };\n  }\n\n  try {\n    await db.insert(contacts).values(validatedFields.data);\n    return {\n      success: true,\n      message: \"Your message has been sent successfully!\",\n    };\n  } catch (error) {\n    console.error(\"Error saving contact message:\", error);\n    return {\n      success: false,\n      message: \"An unexpected error occurred. Please try again later.\",\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;;;;;;;AAEA,MAAM,oBAAoB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,WAAW,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,OAAO,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC7B;AAOO,eAAe,mBACpB,SAA2B,EAC3B,QAAkB;IAElB,MAAM,kBAAkB,kBAAkB,SAAS,CAAC;QAClD,WAAW,SAAS,GAAG,CAAC;QACxB,UAAU,SAAS,GAAG,CAAC;QACvB,OAAO,SAAS,GAAG,CAAC;QACpB,SAAS,SAAS,GAAG,CAAC;IACxB;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;IAEA,IAAI;QACF,MAAM,gHAAA,CAAA,KAAE,CAAC,MAAM,CAAC,oHAAA,CAAA,WAAQ,EAAE,MAAM,CAAC,gBAAgB,IAAI;QACrD,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF;;;IA/BsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/contact/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {sendContactMessage as '608f40c4c6793cec3ee605e4f0b5b9364e287bd2d3'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/contact/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/contact/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/contact/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/contact/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/contact/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/contact/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,sCACA","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}